// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String?
  email    String  @unique
  password String
}

model Book {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  authors       AuthorOnBook[] // Quan hệ nhiều-nhiều với Author thông qua bảng trung gian
  genres        GenreOnBook[] // Quan hệ nhiều-nhiều với Genre thông qua bảng trung gian
  publishedDate DateTime
  price         Float
  summary       String
  createdAt     DateTime       @default(now()) // Đổi thành createdAt
  updatedAt     DateTime       @updatedAt
}

model Author {
  id        String         @id @default(auto()) @map("_id") @db.ObjectId
  name      String         
  bio       String?
  books     AuthorOnBook[] // Quan hệ nhiều-nhiều với Book thông qua bảng trung gian
  createdAt DateTime       @default(now()) // Đổi thành createdAt
  updatedAt DateTime       @updatedAt
}

model Genre {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  name        String        @unique // Đảm bảo tên thể loại là duy nhất
  description String
  books       GenreOnBook[] // Quan hệ nhiều-nhiều với Book thông qua bảng trung gian
  createdAt   DateTime      @default(now()) // Đổi thành createdAt
  updatedAt   DateTime      @updatedAt
}

model AuthorOnBook {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  bookId   String @db.ObjectId
  authorId String @db.ObjectId

  book   Book   @relation(fields: [bookId], references: [id])
  author Author @relation(fields: [authorId], references: [id])
}

model GenreOnBook {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  bookId  String @db.ObjectId
  genreId String @db.ObjectId

  book  Book  @relation(fields: [bookId], references: [id])
  genre Genre @relation(fields: [genreId], references: [id])
}
